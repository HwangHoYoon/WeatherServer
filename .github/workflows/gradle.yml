# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle Docker

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.SUB_TOKEN }}
        submodules: true

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build -x test

    - name: Docker build
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_REPO }}/jagiyadocker .
        docker push ${{ secrets.DOCKER_REPO }}/jagiyadocker

    - name: Deploy
      run: |
          docker stop be-con || true
          docker rm -f be-con || true
          docker rmi $(docker images -f "dangling=true" -q) || true
          docker pull ${{ secrets.DOCKER_REPO }}/jagiyadocker:latest
          docker run -v /var/log/service:/var/log/service --name be-con -p 8080:8080 -d ${{ secrets.DOCKER_REPO }}/jagiyadocker:latest